[{"C:\\Users\\k6yk0\\Documents\\My Projects\\FrontEndProjects\\calculator-app\\src\\index.js":"1","C:\\Users\\k6yk0\\Documents\\My Projects\\FrontEndProjects\\calculator-app\\src\\reportWebVitals.js":"2","C:\\Users\\k6yk0\\Documents\\My Projects\\FrontEndProjects\\calculator-app\\src\\App.js":"3","C:\\Users\\k6yk0\\Documents\\My Projects\\FrontEndProjects\\calculator-app\\src\\components\\KeyPad.js":"4","C:\\Users\\k6yk0\\Documents\\My Projects\\FrontEndProjects\\calculator-app\\src\\components\\Result.js":"5"},{"size":501,"mtime":1611343080447,"results":"6","hashOfConfig":"7"},{"size":362,"mtime":499162500000,"results":"8","hashOfConfig":"7"},{"size":718,"mtime":1611349831722,"results":"9","hashOfConfig":"7"},{"size":1995,"mtime":1611350501091,"results":"10","hashOfConfig":"7"},{"size":397,"mtime":1611349653891,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1ny4nm9",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"C:\\Users\\k6yk0\\Documents\\My Projects\\FrontEndProjects\\calculator-app\\src\\index.js",[],["25","26"],"C:\\Users\\k6yk0\\Documents\\My Projects\\FrontEndProjects\\calculator-app\\src\\reportWebVitals.js",[],"C:\\Users\\k6yk0\\Documents\\My Projects\\FrontEndProjects\\calculator-app\\src\\App.js",[],"C:\\Users\\k6yk0\\Documents\\My Projects\\FrontEndProjects\\calculator-app\\src\\components\\KeyPad.js",["27"],"import React from 'react';\r\n\r\nconst KeyPad = (props) => {\r\n\r\n    const buttons = ['(', ')', 'C', 'CLR', '1', '2', '3', '+', '4', '5', '6', '-', '7', '8', '9', '*', '.', '0', '=', '/'];\r\n\r\n    // logic for each button pressed\r\n    const buttonHandler = (e) => {\r\n        try {\r\n            if (e.target.value === 'CLR') {\r\n                clearButton();\r\n            }\r\n            else if (e.target.value === 'C') {\r\n                backButton();\r\n            }\r\n            else if (e.target.value === '=') {\r\n                calculateButton();\r\n            }\r\n            else {\r\n                props.setProcess(props.process + e.target.value)\r\n            }\r\n        } catch (e) {\r\n            props.setResult(\"error\");\r\n        }\r\n    }\r\n    //Clear button: clear state\r\n    const clearButton = () => {\r\n        props.setResult(0);\r\n        props.setProcess('');\r\n    }\r\n    //Back button: remove last element in the process string\r\n    const backButton = () => {\r\n        if (props.process.length > 0) {\r\n            let newString = props.process.slice(0, -1);\r\n            props.setProcess(newString);\r\n        }\r\n    }\r\n    // equal button: operate and set result\r\n    const calculateButton = () => {\r\n        let preResult = '';\r\n        if (props.process.includes('--')) {\r\n            preResult = props.process.replace('--', '+')\r\n        }\r\n        else {\r\n            preResult = props.process\r\n        }\r\n        // eval alternative\r\n        props.setResult(new Function('return ' + preResult))\r\n\r\n    }\r\n\r\n    // map the basic calculator symbols with the above created arrays\r\n    const mapButton = (param) => {\r\n        return (\r\n            param.map((element) => (\r\n                <button key={element} value={element} onClick={buttonHandler}>{element}</button>\r\n            ))\r\n        )\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"button\">\r\n                {mapButton(buttons)}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default KeyPad;","C:\\Users\\k6yk0\\Documents\\My Projects\\FrontEndProjects\\calculator-app\\src\\components\\Result.js",[],["28","29"],{"ruleId":"30","replacedBy":"31"},{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","severity":1,"message":"35","line":48,"column":25,"nodeType":"36","messageId":"37","endLine":48,"endColumn":60},{"ruleId":"30","replacedBy":"38"},{"ruleId":"32","replacedBy":"39"},"no-native-reassign",["40"],"no-negated-in-lhs",["41"],"no-new-func","The Function constructor is eval.","NewExpression","noFunctionConstructor",["40"],["41"],"no-global-assign","no-unsafe-negation"]