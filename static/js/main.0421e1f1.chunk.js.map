{"version":3,"sources":["components/KeyPad.js","components/Result.js","App.js","reportWebVitals.js","index.js"],"names":["KeyPad","props","param","buttonHandler","e","target","value","clearButton","backButton","calculateButton","setProcess","process","setResult","length","newString","slice","preResult","includes","replace","Function","className","map","element","onClick","Result","result","App","useState","href","reportWebVitals","onPerfEntry","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kOAsEeA,G,MApEA,SAACC,GAEZ,IAgDmBC,EA7CbC,EAAgB,SAACC,GACnB,IAC2B,QAAnBA,EAAEC,OAAOC,MACTC,IAEwB,MAAnBH,EAAEC,OAAOC,MACdE,IAEwB,MAAnBJ,EAAEC,OAAOC,MACdG,IAGAR,EAAMS,WAAWT,EAAMU,QAAUP,EAAEC,OAAOC,OAEhD,MAAOF,GACLH,EAAMW,UAAU,WAIlBL,EAAc,WAChBN,EAAMW,UAAU,GAChBX,EAAMS,WAAW,KAGfF,EAAa,WACf,GAAIP,EAAMU,QAAQE,OAAS,EAAG,CAC1B,IAAIC,EAAYb,EAAMU,QAAQI,MAAM,GAAI,GACxCd,EAAMS,WAAWI,KAInBL,EAAkB,WACpB,IAAIO,EAAY,GAEZA,EADAf,EAAMU,QAAQM,SAAS,MACXhB,EAAMU,QAAQO,QAAQ,KAAM,KAG5BjB,EAAMU,QAGtBV,EAAMW,UAAU,IAAIO,SAAS,UAAYH,KAc7C,OACI,8BACI,qBAAKI,UAAU,SAAf,UAXWlB,EAhDH,CAAC,IAAK,IAAK,IAAK,MAAO,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAkD1GA,EAAMmB,KAAI,SAACC,GAAD,OACN,wBAAsBhB,MAAOgB,EAASC,QAASpB,EAA/C,SAA+DmB,GAAlDA,aCjCdE,EApBA,SAACvB,GAEZ,IAAIwB,EAASxB,EAAMwB,OACfd,EAAUV,EAAMU,QAEpB,OACI,gCACI,qBAAKS,UAAU,SAAf,SACI,4BAAIK,MAGR,qBAAKL,UAAU,SAAf,SACI,4BAAIT,UCoBLe,MA7Bf,WAAgB,IAAD,EAEeC,mBAAS,GAFxB,mBAENF,EAFM,KAEEb,EAFF,OAGiBe,mBAAS,IAH1B,mBAGNhB,EAHM,KAGGD,EAHH,KAKb,OACE,sBAAKU,UAAU,kBAAf,UACE,kDAEA,cAAC,EAAD,CACEK,OAAQA,EACRd,QAASA,IAGX,cAAC,EAAD,CACEc,OAAQA,EACRb,UAAWA,EACXD,QAASA,EACTD,WAAYA,IAId,wBAAQU,UAAU,SAAlB,SACE,mBAAGQ,KAAK,0CAA0CvB,OAAO,QAAzD,wBChBOwB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBX,UACxC,6BAAqBY,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.0421e1f1.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst KeyPad = (props) => {\r\n\r\n    const buttons = ['(', ')', 'C', 'CLR', '1', '2', '3', '+', '4', '5', '6', '-', '7', '8', '9', '*', '.', '0', '=', '/'];\r\n\r\n    // logic for each button pressed\r\n    const buttonHandler = (e) => {\r\n        try {\r\n            if (e.target.value === 'CLR') {\r\n                clearButton();\r\n            }\r\n            else if (e.target.value === 'C') {\r\n                backButton();\r\n            }\r\n            else if (e.target.value === '=') {\r\n                calculateButton();\r\n            }\r\n            else {\r\n                props.setProcess(props.process + e.target.value)\r\n            }\r\n        } catch (e) {\r\n            props.setResult(\"error\");\r\n        }\r\n    }\r\n    //Clear button: clear state\r\n    const clearButton = () => {\r\n        props.setResult(0);\r\n        props.setProcess('');\r\n    }\r\n    //Back button: remove last element in the process string\r\n    const backButton = () => {\r\n        if (props.process.length > 0) {\r\n            let newString = props.process.slice(0, -1);\r\n            props.setProcess(newString);\r\n        }\r\n    }\r\n    // equal button: operate and set result\r\n    const calculateButton = () => {\r\n        let preResult = '';\r\n        if (props.process.includes('--')) {\r\n            preResult = props.process.replace('--', '+')\r\n        }\r\n        else {\r\n            preResult = props.process\r\n        }\r\n        // eval alternative\r\n        props.setResult(new Function('return ' + preResult))\r\n\r\n    }\r\n\r\n    // map the basic calculator symbols with the above created arrays\r\n    const mapButton = (param) => {\r\n        return (\r\n            param.map((element) => (\r\n                <button key={element} value={element} onClick={buttonHandler}>{element}</button>\r\n            ))\r\n        )\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"button\">\r\n                {mapButton(buttons)}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default KeyPad;","import React from 'react';\r\n\r\nconst Result = (props) => {\r\n\r\n    let result = props.result;\r\n    let process = props.process;\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"result\">\r\n                <p>{result}</p>\r\n            </div>\r\n\r\n            <div className=\"result\">\r\n                <p>{process}</p>\r\n            </div>\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Result;","import React, { useState } from 'react';\nimport './App.css';\nimport KeyPad from './components/KeyPad';\nimport Result from './components/Result';\n\nfunction App() {\n\n  const [result, setResult] = useState(0);\n  const [process, setProcess] = useState('');\n\n  return (\n    <div className=\"calculator-body\">\n      <h1>Basic Calculator</h1>\n\n      <Result\n        result={result}\n        process={process}\n      />\n\n      <KeyPad\n        result={result}\n        setResult={setResult}\n        process={process}\n        setProcess={setProcess}\n      />\n\n\n      <footer className=\"footer\">\n        <a href=\"https://kimkev.github.io/ReactPage.html\" target=\"_self\">Back</a>\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}